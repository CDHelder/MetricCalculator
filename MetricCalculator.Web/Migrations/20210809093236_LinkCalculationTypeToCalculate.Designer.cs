// <auto-generated />
using System;
using MetricCalculator.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MetricCalculator.Web.Migrations
{
    [DbContext(typeof(MetricCalculatorDbContext))]
    [Migration("20210809093236_LinkCalculationTypeToCalculate")]
    partial class LinkCalculationTypeToCalculate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MetricCalculator.Web.Models.Calculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AfterValue")
                        .HasColumnType("float");

                    b.Property<double>("BeforeValue")
                        .HasColumnType("float");

                    b.Property<int>("CalculationTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTimeCalculated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CalculationTypeId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("MetricCalculator.Web.Models.CalculationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CalculationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "MeterToCentimeter"
                        },
                        new
                        {
                            Id = 2,
                            Name = "CentimeterToMeter"
                        },
                        new
                        {
                            Id = 3,
                            Name = "CentimeterToMillimeter"
                        },
                        new
                        {
                            Id = 4,
                            Name = "MillimeterToCentimeter"
                        },
                        new
                        {
                            Id = 5,
                            Name = "MeterToInch"
                        },
                        new
                        {
                            Id = 6,
                            Name = "InchToMeter"
                        });
                });

            modelBuilder.Entity("MetricCalculator.Web.Models.Calculation", b =>
                {
                    b.HasOne("MetricCalculator.Web.Models.CalculationType", "Type")
                        .WithMany()
                        .HasForeignKey("CalculationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
